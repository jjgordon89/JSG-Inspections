{"version":3,"file":"static/js/564.43bd09e5.chunk.js","mappings":"sKAGA,MAAMA,EAAc,CAClB,CAAEC,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,QAASC,MAAO,UAGrBC,EAAe,CACnBC,UAAW,CAAC,EACZC,iBAAkB,KAClBC,gBAAiB,GACjBC,SAAU,IAGZ,SAASC,EAAgBC,EAAOC,GAC9B,OAAQA,EAAOC,MACb,IAAK,gBACH,MAAO,IAAKF,EAAOL,UAAWM,EAAOE,SACvC,IAAK,kBACH,MAAMC,EAAWJ,EAAML,UAAUM,EAAOE,SACxC,MAAO,IACFH,EACHJ,iBAAkBK,EAAOE,QACzBL,SAAUM,EAAWA,EAASN,SAAW,GACzCD,gBAAiBI,EAAOE,SAE5B,IAAK,2BACH,MAAO,IAAKH,EAAOH,gBAAiBI,EAAOE,SAC7C,IAAK,cACH,MAAME,EAAa,CAAEC,GAAIC,KAAKC,MAAOC,KAAM,eAAeT,EAAMF,SAASY,OAAS,IAAKC,MAAO,IAC9F,MAAO,IAAKX,EAAOF,SAAU,IAAIE,EAAMF,SAAUO,IACnD,IAAK,sBACH,MAAO,IACFL,EACHF,SAAUE,EAAMF,SAASc,IAAIC,GAC3BA,EAAQP,KAAOL,EAAOE,QAAQG,GAAK,IAAKO,EAASJ,KAAMR,EAAOE,QAAQM,MAASI,IAGrF,IAAK,iBACH,MAAO,IAAKb,EAAOF,SAAUE,EAAMF,SAASgB,OAAOD,GAAWA,EAAQP,KAAOL,EAAOE,UACtF,IAAK,WACH,MAAMY,EAAU,CAAET,GAAIC,KAAKC,MAAOQ,KAAM,WAAYC,UAAW,QAC/D,MAAO,IACFjB,EACHF,SAAUE,EAAMF,SAASc,IAAIC,GAC3BA,EAAQP,KAAOL,EAAOE,QAAQe,UAAY,IAAKL,EAASF,MAAO,IAAIE,EAAQF,MAAOI,IAAaF,IAGrG,IAAK,cACH,MAAO,IACFb,EACHF,SAAUE,EAAMF,SAASc,IAAIC,GAC3BA,EAAQP,KAAOL,EAAOE,QAAQe,UAC1B,IACKL,EACHF,MAAOE,EAAQF,MAAMC,IAAIO,GACvBA,EAAKb,KAAOL,EAAOE,QAAQgB,KAAKb,GAAKL,EAAOE,QAAQgB,KAAOA,IAG/DN,IAGV,IAAK,cACH,MAAO,IACFb,EACHF,SAAUE,EAAMF,SAASc,IAAIC,GAC3BA,EAAQP,KAAOL,EAAOE,QAAQe,UAC1B,IAAKL,EAASF,MAAOE,EAAQF,MAAMG,OAAOK,GAAQA,EAAKb,KAAOL,EAAOE,QAAQiB,SAC7EP,IAGV,IAAK,QACH,MAAO,IAAKnB,EAAcC,UAAWK,EAAML,WAC7C,QACE,OAAOK,EAEb,CA8JA,QA5JA,WACE,MAAOA,EAAOqB,IAAYC,EAAAA,EAAAA,YAAWvB,EAAiBL,GA2DtD,OAzDA6B,EAAAA,EAAAA,WAAU,MACRC,iBACE,IACE,MAEM7B,SAFqB8B,OAAOC,IAAI/B,UAAUgC,UAEjBC,OAAO,CAACC,EAAKzB,KAC1CyB,EAAIzB,EAASK,MAAQ,CAAEH,GAAIF,EAASE,MAAOwB,KAAKC,MAAM3B,EAAS4B,SACxDH,GACN,CAAC,GACJR,EAAS,CAAEnB,KAAM,gBAAiBC,QAASR,GAC7C,CAAE,MAAOsC,GACPC,QAAQD,MAAM,6BAA8BA,EAC9C,CACF,CACAE,IACC,KA2CDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wCAEJF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,MAAA,UACE5C,MAAOQ,EAAMJ,kBAAoB,GACjC4C,SAAUC,GAAKpB,EAAS,CAAEnB,KAAM,kBAAmBC,QAASsC,EAAEC,OAAOlD,QAAS8C,SAAA,EAE9EC,EAAAA,EAAAA,KAAA,UAAQ/C,MAAM,GAAE8C,SAAC,8BAChBK,OAAOC,KAAK5C,EAAML,WAAWiB,IAAIH,IAChC8B,EAAAA,EAAAA,KAAA,UAAmB/C,MAAOiB,EAAK6B,SAC5B7B,GADUA,QAKjB8B,EAAAA,EAAAA,KAAA,SACErC,KAAK,OACL2C,YAAY,+BACZrD,MAAOQ,EAAMH,gBACb2C,SAAUC,GAAKpB,EAAS,CAAEnB,KAAM,2BAA4BC,QAASsC,EAAEC,OAAOlD,WAEhF+C,EAAAA,EAAAA,KAAA,UAAQO,QA9DatB,UACzB,IAAKxB,EAAMH,gBAET,YADAkD,MAAM,iCAGR,MAAMC,EAAc,CAAElD,SAAUE,EAAMF,UACtC,UACQ2B,OAAOC,IAAI/B,UAAUsD,KAAKjD,EAAMH,gBAAiBiC,KAAKoB,UAAUF,IACtE3B,EAAS,CAAEnB,KAAM,gBAAiBC,QAAS,IAAKH,EAAML,UAAW,CAACK,EAAMH,iBAAkBmD,KAC1FD,MAAM,+BACR,CAAE,MAAOd,GACPC,QAAQD,MAAM,2BAA4BA,GAC1Cc,MAAM,yBACR,GAiDwCT,SAAC,mBACrCC,EAAAA,EAAAA,KAAA,UAAQO,QAASA,IAAMzB,EAAS,CAAEnB,KAAM,UAAWoC,SAAC,kBACpDC,EAAAA,EAAAA,KAAA,UAAQO,QAhDetB,UAC3B,IAAKxB,EAAMJ,iBAET,YADAmD,MAAM,uCAGR,MAAMI,EAAmBnD,EAAML,UAAUK,EAAMJ,kBAC/C,GAAKuD,GAAqBA,EAAiB7C,GAK3C,UACQmB,OAAOC,IAAI/B,UAAUyD,OAAOD,EAAiB7C,IACnD,MAAM+C,EAAe,IAAKrD,EAAML,kBACzB0D,EAAarD,EAAMJ,kBAC1ByB,EAAS,CAAEnB,KAAM,gBAAiBC,QAASkD,IAC3ChC,EAAS,CAAEnB,KAAM,UACjB6C,MAAM,iCACR,CAAE,MAAOd,GACPC,QAAQD,MAAM,6BAA8BA,GAC5Cc,MAAM,2BACR,MAdEA,MAAM,2CAyCmCV,UAAU,gBAAeC,SAAC,iCAGnEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC7BtC,EAAMF,SAASc,IAAIC,IAClBuB,EAAAA,EAAAA,MAAA,OAAsBC,UAAU,UAASC,SAAA,EACvCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SACErC,KAAK,OACLV,MAAOqB,EAAQJ,KACf+B,SAAUC,GAAKpB,EAAS,CAAEnB,KAAM,sBAAuBC,QAAS,CAAEG,GAAIO,EAAQP,GAAIG,KAAMgC,EAAEC,OAAOlD,YAEnG+C,EAAAA,EAAAA,KAAA,UAAQO,QAASA,IAAMzB,EAAS,CAAEnB,KAAM,iBAAkBC,QAASU,EAAQP,KAAMgC,SAAC,uBAEpFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC3BzB,EAAQF,MAAMC,IAAIO,IAAI,IAAAmC,EAAA,OACrBlB,EAAAA,EAAAA,MAAA,OAAmBC,UAAU,OAAMC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SACErC,KAAK,OACLV,MAAO2B,EAAKH,KACZwB,SAAUC,GACRpB,EAAS,CAAEnB,KAAM,cAAeC,QAAS,CAAEe,UAAWL,EAAQP,GAAIa,KAAM,IAAKA,EAAMH,KAAMyB,EAAEC,OAAOlD,aAGtG+C,EAAAA,EAAAA,KAAA,UACE/C,MAAO2B,EAAKF,UACZuB,SAAUC,GACRpB,EAAS,CACPnB,KAAM,cACNC,QAAS,CAAEe,UAAWL,EAAQP,GAAIa,KAAM,IAAKA,EAAMF,UAAWwB,EAAEC,OAAOlD,UAE1E8C,SAEA/C,EAAYqB,IAAI2C,IACfhB,EAAAA,EAAAA,KAAA,UAAuB/C,MAAO+D,EAAG/D,MAAM8C,SACpCiB,EAAG9D,OADO8D,EAAG/D,UAKA,aAAnB2B,EAAKF,YACJsB,EAAAA,EAAAA,KAAA,SACErC,KAAK,OACL2C,YAAY,4BACZrD,OAAmB,QAAZ8D,EAAAnC,EAAKqC,eAAO,IAAAF,OAAA,EAAZA,EAAcG,KAAK,OAAQ,GAClCjB,SAAUC,GACRpB,EAAS,CACPnB,KAAM,cACNC,QAAS,CACPe,UAAWL,EAAQP,GACnBa,KAAM,IAAKA,EAAMqC,QAASf,EAAEC,OAAOlD,MAAMkE,MAAM,YAMzDnB,EAAAA,EAAAA,KAAA,UAAQO,QAASA,IAAMzB,EAAS,CAAEnB,KAAM,cAAeC,QAAS,CAAEe,UAAWL,EAAQP,GAAIc,OAAQD,EAAKb,MAAQgC,SAAC,aAvCvGnB,EAAKb,OA4CjBiC,EAAAA,EAAAA,KAAA,UAAQO,QAASA,IAAMzB,EAAS,CAAEnB,KAAM,WAAYC,QAAS,CAAEe,UAAWL,EAAQP,MAAQgC,SAAC,kBAvDrFzB,EAAQP,MA6DpBiC,EAAAA,EAAAA,KAAA,UAAQO,QAASA,IAAMzB,EAAS,CAAEnB,KAAM,gBAAiBoC,SAAC,qBAIlE,C","sources":["components/TemplateBuilder.js"],"sourcesContent":["import React, { useReducer, useEffect } from \"react\";\r\nimport \"./TemplateBuilder.css\";\r\n\r\nconst FIELD_TYPES = [\r\n  { value: \"text\", label: \"Text\" },\r\n  { value: \"number\", label: \"Number\" },\r\n  { value: \"date\", label: \"Date\" },\r\n  { value: \"dropdown\", label: \"Dropdown\" },\r\n  { value: \"checkbox\", label: \"Checkbox\" },\r\n  { value: \"signature\", label: \"Signature\" },\r\n  { value: \"photo\", label: \"Photo\" },\r\n];\r\n\r\nconst initialState = {\r\n  templates: {},\r\n  selectedTemplate: null,\r\n  newTemplateName: \"\",\r\n  sections: [],\r\n};\r\n\r\nfunction templateReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"SET_TEMPLATES\":\r\n      return { ...state, templates: action.payload };\r\n    case \"SELECT_TEMPLATE\":\r\n      const template = state.templates[action.payload];\r\n      return {\r\n        ...state,\r\n        selectedTemplate: action.payload,\r\n        sections: template ? template.sections : [],\r\n        newTemplateName: action.payload,\r\n      };\r\n    case \"UPDATE_NEW_TEMPLATE_NAME\":\r\n      return { ...state, newTemplateName: action.payload };\r\n    case \"ADD_SECTION\":\r\n      const newSection = { id: Date.now(), name: `New Section ${state.sections.length + 1}`, items: [] };\r\n      return { ...state, sections: [...state.sections, newSection] };\r\n    case \"UPDATE_SECTION_NAME\":\r\n      return {\r\n        ...state,\r\n        sections: state.sections.map(section =>\r\n          section.id === action.payload.id ? { ...section, name: action.payload.name } : section\r\n        ),\r\n      };\r\n    case \"DELETE_SECTION\":\r\n      return { ...state, sections: state.sections.filter(section => section.id !== action.payload) };\r\n    case \"ADD_ITEM\":\r\n      const newItem = { id: Date.now(), text: \"New Item\", fieldType: \"text\" };\r\n      return {\r\n        ...state,\r\n        sections: state.sections.map(section =>\r\n          section.id === action.payload.sectionId ? { ...section, items: [...section.items, newItem] } : section\r\n        ),\r\n      };\r\n    case \"UPDATE_ITEM\":\r\n      return {\r\n        ...state,\r\n        sections: state.sections.map(section =>\r\n          section.id === action.payload.sectionId\r\n            ? {\r\n                ...section,\r\n                items: section.items.map(item =>\r\n                  item.id === action.payload.item.id ? action.payload.item : item\r\n                ),\r\n              }\r\n            : section\r\n        ),\r\n      };\r\n    case \"DELETE_ITEM\":\r\n      return {\r\n        ...state,\r\n        sections: state.sections.map(section =>\r\n          section.id === action.payload.sectionId\r\n            ? { ...section, items: section.items.filter(item => item.id !== action.payload.itemId) }\r\n            : section\r\n        ),\r\n      };\r\n    case \"RESET\":\r\n      return { ...initialState, templates: state.templates };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction TemplateBuilder() {\r\n  const [state, dispatch] = useReducer(templateReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    async function fetchTemplates() {\r\n      try {\r\n        const templateList = await window.api.templates.getAll();\r\n        // Transform the array of templates into an object keyed by template name\r\n        const templates = templateList.reduce((acc, template) => {\r\n          acc[template.name] = { id: template.id, ...JSON.parse(template.fields) };\r\n          return acc;\r\n        }, {});\r\n        dispatch({ type: \"SET_TEMPLATES\", payload: templates });\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch templates:\", error);\r\n      }\r\n    }\r\n    fetchTemplates();\r\n  }, []);\r\n\r\n  const handleSaveTemplate = async () => {\r\n    if (!state.newTemplateName) {\r\n      alert(\"Please enter a template name.\");\r\n      return;\r\n    }\r\n    const newTemplate = { sections: state.sections };\r\n    try {\r\n      await window.api.templates.save(state.newTemplateName, JSON.stringify(newTemplate));\r\n      dispatch({ type: \"SET_TEMPLATES\", payload: { ...state.templates, [state.newTemplateName]: newTemplate } });\r\n      alert(\"Template saved successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Failed to save template:\", error);\r\n      alert(\"Error saving template.\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteTemplate = async () => {\r\n    if (!state.selectedTemplate) {\r\n      alert(\"Please select a template to delete.\");\r\n      return;\r\n    }\r\n    const templateToDelete = state.templates[state.selectedTemplate];\r\n    if (!templateToDelete || !templateToDelete.id) {\r\n      alert(\"Cannot delete - template ID not found.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await window.api.templates.delete(templateToDelete.id);\r\n      const newTemplates = { ...state.templates };\r\n      delete newTemplates[state.selectedTemplate];\r\n      dispatch({ type: \"SET_TEMPLATES\", payload: newTemplates });\r\n      dispatch({ type: \"RESET\" });\r\n      alert(\"Template deleted successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Failed to delete template:\", error);\r\n      alert(\"Error deleting template.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"template-builder\">\r\n      <h2>Custom Inspection Template Builder</h2>\r\n\r\n      <div className=\"template-controls\">\r\n        <select\r\n          value={state.selectedTemplate || \"\"}\r\n          onChange={e => dispatch({ type: \"SELECT_TEMPLATE\", payload: e.target.value })}\r\n        >\r\n          <option value=\"\">Select a template to edit</option>\r\n          {Object.keys(state.templates).map(name => (\r\n            <option key={name} value={name}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"New or updated template name\"\r\n          value={state.newTemplateName}\r\n          onChange={e => dispatch({ type: \"UPDATE_NEW_TEMPLATE_NAME\", payload: e.target.value })}\r\n        />\r\n        <button onClick={handleSaveTemplate}>Save Template</button>\r\n        <button onClick={() => dispatch({ type: \"RESET\" })}>New Template</button>\r\n        <button onClick={handleDeleteTemplate} className=\"delete-button\">Delete Selected Template</button>\r\n      </div>\r\n\r\n      <div className=\"template-editor\">\r\n        {state.sections.map(section => (\r\n          <div key={section.id} className=\"section\">\r\n            <div className=\"section-header\">\r\n              <input\r\n                type=\"text\"\r\n                value={section.name}\r\n                onChange={e => dispatch({ type: \"UPDATE_SECTION_NAME\", payload: { id: section.id, name: e.target.value } })}\r\n              />\r\n              <button onClick={() => dispatch({ type: \"DELETE_SECTION\", payload: section.id })}>Delete Section</button>\r\n            </div>\r\n            <div className=\"section-items\">\r\n              {section.items.map(item => (\r\n                <div key={item.id} className=\"item\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={item.text}\r\n                    onChange={e =>\r\n                      dispatch({ type: \"UPDATE_ITEM\", payload: { sectionId: section.id, item: { ...item, text: e.target.value } } })\r\n                    }\r\n                  />\r\n                  <select\r\n                    value={item.fieldType}\r\n                    onChange={e =>\r\n                      dispatch({\r\n                        type: \"UPDATE_ITEM\",\r\n                        payload: { sectionId: section.id, item: { ...item, fieldType: e.target.value } },\r\n                      })\r\n                    }\r\n                  >\r\n                    {FIELD_TYPES.map(ft => (\r\n                      <option key={ft.value} value={ft.value}>\r\n                        {ft.label}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {item.fieldType === \"dropdown\" && (\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Options (comma-separated)\"\r\n                      value={item.options?.join(\",\") || \"\"}\r\n                      onChange={e =>\r\n                        dispatch({\r\n                          type: \"UPDATE_ITEM\",\r\n                          payload: {\r\n                            sectionId: section.id,\r\n                            item: { ...item, options: e.target.value.split(\",\") },\r\n                          },\r\n                        })\r\n                      }\r\n                    />\r\n                  )}\r\n                  <button onClick={() => dispatch({ type: \"DELETE_ITEM\", payload: { sectionId: section.id, itemId: item.id } })}>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              ))}\r\n              <button onClick={() => dispatch({ type: \"ADD_ITEM\", payload: { sectionId: section.id } })}>\r\n                Add Item\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <button onClick={() => dispatch({ type: \"ADD_SECTION\" })}>Add Section</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TemplateBuilder;\r\n"],"names":["FIELD_TYPES","value","label","initialState","templates","selectedTemplate","newTemplateName","sections","templateReducer","state","action","type","payload","template","newSection","id","Date","now","name","length","items","map","section","filter","newItem","text","fieldType","sectionId","item","itemId","dispatch","useReducer","useEffect","async","window","api","getAll","reduce","acc","JSON","parse","fields","error","console","fetchTemplates","_jsxs","className","children","_jsx","onChange","e","target","Object","keys","placeholder","onClick","alert","newTemplate","save","stringify","templateToDelete","delete","newTemplates","_item$options","ft","options","join","split"],"sourceRoot":""}