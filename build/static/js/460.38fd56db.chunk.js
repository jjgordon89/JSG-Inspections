"use strict";(self.webpackChunkjsg_inspections=self.webpackChunkjsg_inspections||[]).push([[460],{460:(e,a,s)=>{s.r(a),s.d(a,{default:()=>t});var i=s(5043),n=s(4107),r=s(579);const t=()=>{const{currentUser:e}=(0,n.J)(),[a,s]=(0,i.useState)([]),[t,l]=(0,i.useState)([]),[c,d]=(0,i.useState)(!0),[o,u]=(0,i.useState)(null),[p,m]=(0,i.useState)(!1),[h,x]=(0,i.useState)(!1),[j,v]=(0,i.useState)(!1),[y,g]=(0,i.useState)(""),[N,b]=(0,i.useState)("all"),[f,w]=(0,i.useState)("all"),[C,_]=(0,i.useState)(null),[S,k]=(0,i.useState)([]),[q,T]=(0,i.useState)([]),[D,O]=(0,i.useState)({personName:"",credentialType:"",equipmentTypes:"",certificationBody:"",certificateNumber:"",issueDate:"",expirationDate:"",renewalRequired:!0,notes:""}),[E,I]=(0,i.useState)({personName:"",workOrderId:"",equipmentType:""});(0,i.useEffect)(()=>{A(),R()},[]);const A=async()=>{try{d(!0),u(null);const[e,a]=await Promise.all([window.api.credentials.getAll(),window.api.workOrders.getAll()]);s(e),l(a)}catch(e){console.error("Error loading credentials data:",e),u(e.message)}finally{d(!1)}},R=async()=>{try{const e=new Date,a=new Date(e.getTime()+2592e6),s=await window.api.credentials.getExpiring(a.toISOString().split("T")[0]),i=[];s.forEach(a=>{const s=new Date(a.expiration_date),n=Math.ceil((s-e)/864e5);n<0?i.push({type:"critical",message:`${a.person_name}'s ${a.credential_type} credential expired ${Math.abs(n)} days ago`,credentialId:a.id,personName:a.person_name,credentialType:a.credential_type,expirationDate:a.expiration_date}):n<=7?i.push({type:"warning",message:`${a.person_name}'s ${a.credential_type} credential expires in ${n} days`,credentialId:a.id,personName:a.person_name,credentialType:a.credential_type,expirationDate:a.expiration_date}):n<=30&&i.push({type:"info",message:`${a.person_name}'s ${a.credential_type} credential expires in ${n} days`,credentialId:a.id,personName:a.person_name,credentialType:a.credential_type,expirationDate:a.expiration_date})}),k(i)}catch(e){console.error("Error checking expiring credentials:",e)}},$=(e,a)=>{var s,i;const n=[];return a.toLowerCase().includes("crane")&&(n.push({type:"Crane Operator"}),n.push({type:"Rigger"}),n.push({type:"Signal Person"})),a.toLowerCase().includes("hoist")&&n.push({type:"Crane Operator"}),"corrective"!==(null===e||void 0===e?void 0:e.work_type)&&"emergency"!==(null===e||void 0===e?void 0:e.work_type)||n.push({type:"Maintenance Technician"}),"critical"===(null===e||void 0===e?void 0:e.priority)&&n.push({type:"Supervisor"}),(null!==e&&void 0!==e&&null!==(s=e.title)&&void 0!==s&&s.toLowerCase().includes("inspect")||null!==e&&void 0!==e&&null!==(i=e.description)&&void 0!==i&&i.toLowerCase().includes("inspect"))&&n.push({type:"Inspector"}),n},L=async e=>{try{const a=new Date,s=new Date(a);"Crane Operator"===e.credential_type||"Rigger"===e.credential_type?s.setFullYear(s.getFullYear()+3):"Inspector"===e.credential_type?s.setFullYear(s.getFullYear()+2):s.setFullYear(s.getFullYear()+1),O({personName:e.person_name,credentialType:e.credential_type,equipmentTypes:e.equipment_types?JSON.parse(e.equipment_types).join(", "):"",certificationBody:e.certification_body,certificateNumber:"",issueDate:a.toISOString().split("T")[0],expirationDate:s.toISOString().split("T")[0],renewalRequired:e.renewal_required,notes:`Renewal of credential #${e.id}`}),_(e),x(!0)}catch(a){console.error("Error renewing credential:",a),u(a.message)}},M=()=>{O({personName:"",credentialType:"",equipmentTypes:"",certificationBody:"",certificateNumber:"",issueDate:"",expirationDate:"",renewalRequired:!0,notes:""}),_(null)},B=()=>{I({personName:"",workOrderId:"",equipmentType:""}),T([])},P=e=>{if("active"!==e.status)return e.status;if(!e.expiration_date)return"no-expiry";const a=new Date,s=new Date(e.expiration_date)-a,i=Math.ceil(s/864e5);return i<0?"expired":i<=30?"expiring-soon":i<=90?"expiring-later":"current"},F=e=>{const a=P(e),s={expired:{class:"status-expired",label:"Expired"},"expiring-soon":{class:"status-expiring-soon",label:"Expires Soon"},"expiring-later":{class:"status-expiring-later",label:"Expires in 90 Days"},current:{class:"status-current",label:"Current"},suspended:{class:"status-suspended",label:"Suspended"},revoked:{class:"status-revoked",label:"Revoked"},"no-expiry":{class:"status-no-expiry",label:"No Expiry"}}[a]||{class:"status-unknown",label:a};return(0,r.jsx)("span",{className:`status-badge ${s.class}`,children:s.label})};if(c)return(0,r.jsxs)("div",{className:"credentials",children:[(0,r.jsx)("div",{className:"credentials-header",children:(0,r.jsx)("h1",{children:"Credentials"})}),(0,r.jsx)("div",{className:"loading-spinner",children:"Loading credentials data..."})]});if(o)return(0,r.jsxs)("div",{className:"credentials",children:[(0,r.jsx)("div",{className:"credentials-header",children:(0,r.jsx)("h1",{children:"Credentials"})}),(0,r.jsxs)("div",{className:"error-message",children:[(0,r.jsxs)("p",{children:["Error loading credentials: ",o]}),(0,r.jsx)("button",{onClick:A,className:"retry-button",children:"Retry"})]})]});const J=(()=>{let e=a;return y&&(e=e.filter(e=>e.person_name.toLowerCase().includes(y.toLowerCase()))),"all"!==f&&(e=e.filter(e=>e.credential_type===f)),"all"!==N&&(e="expiring"===N?e.filter(e=>{const a=P(e);return"expiring-soon"===a||"expiring-later"===a}):e.filter(e=>P(e)===N)),e.sort((e,a)=>e.person_name!==a.person_name?e.person_name.localeCompare(a.person_name):new Date(e.expiration_date||"9999-12-31")-new Date(a.expiration_date||"9999-12-31"))})(),V=[...new Set(a.map(e=>e.person_name))].sort(),Y=[...new Set(a.map(e=>e.credential_type))].sort();return(0,r.jsxs)("div",{className:"credentials",children:[(0,r.jsxs)("div",{className:"credentials-header",children:[(0,r.jsx)("h1",{children:"Credentials"}),(0,r.jsxs)("div",{className:"header-actions",children:[(0,r.jsx)("button",{className:"create-button secondary",onClick:()=>v(!0),children:"\ud83d\udd0d Check Credentials"}),(0,r.jsx)("button",{className:"create-button",onClick:()=>m(!0),children:"+ Add Credential"})]})]}),S.length>0&&(0,r.jsxs)("div",{className:"credential-notifications",children:[(0,r.jsx)("h3",{children:"\ud83d\udd14 Credential Expiration Alerts"}),S.map((e,a)=>(0,r.jsxs)("div",{className:`notification ${e.type}`,children:[(0,r.jsx)("span",{className:"notification-message",children:e.message}),(0,r.jsx)("button",{className:"notification-action",onClick:()=>L({id:e.credentialId,person_name:e.personName,credential_type:e.credentialType,expiration_date:e.expirationDate}),children:"Renew Credential"})]},a))]}),(0,r.jsxs)("div",{className:"credentials-summary",children:[(0,r.jsxs)("div",{className:"summary-card",children:[(0,r.jsx)("span",{className:"summary-value",children:a.length}),(0,r.jsx)("span",{className:"summary-label",children:"Total Credentials"})]}),(0,r.jsxs)("div",{className:"summary-card",children:[(0,r.jsx)("span",{className:"summary-value status-good",children:a.filter(e=>"current"===P(e)).length}),(0,r.jsx)("span",{className:"summary-label",children:"Current"})]}),(0,r.jsxs)("div",{className:"summary-card",children:[(0,r.jsx)("span",{className:"summary-value status-warning",children:a.filter(e=>{const a=P(e);return"expiring-soon"===a||"expiring-later"===a}).length}),(0,r.jsx)("span",{className:"summary-label",children:"Expiring"})]}),(0,r.jsxs)("div",{className:"summary-card",children:[(0,r.jsx)("span",{className:"summary-value status-critical",children:a.filter(e=>"expired"===P(e)).length}),(0,r.jsx)("span",{className:"summary-label",children:"Expired"})]})]}),(0,r.jsxs)("div",{className:"credentials-filters",children:[(0,r.jsxs)("div",{className:"filter-group",children:[(0,r.jsx)("label",{children:"Person:"}),(0,r.jsxs)("select",{value:y,onChange:e=>g(e.target.value),children:[(0,r.jsx)("option",{value:"",children:"All Persons"}),V.map(e=>(0,r.jsx)("option",{value:e,children:e},e))]})]}),(0,r.jsxs)("div",{className:"filter-group",children:[(0,r.jsx)("label",{children:"Credential Type:"}),(0,r.jsxs)("select",{value:f,onChange:e=>w(e.target.value),children:[(0,r.jsx)("option",{value:"all",children:"All Types"}),Y.map(e=>(0,r.jsx)("option",{value:e,children:e},e))]})]}),(0,r.jsxs)("div",{className:"filter-group",children:[(0,r.jsx)("label",{children:"Status:"}),(0,r.jsxs)("select",{value:N,onChange:e=>b(e.target.value),children:[(0,r.jsx)("option",{value:"all",children:"All Status"}),(0,r.jsx)("option",{value:"current",children:"Current"}),(0,r.jsx)("option",{value:"expiring",children:"Expiring"}),(0,r.jsx)("option",{value:"expired",children:"Expired"}),(0,r.jsx)("option",{value:"suspended",children:"Suspended"}),(0,r.jsx)("option",{value:"revoked",children:"Revoked"})]})]})]}),(0,r.jsx)("div",{className:"credentials-list",children:0===J.length?(0,r.jsxs)("div",{className:"empty-state",children:[(0,r.jsx)("p",{children:"No credentials found matching the current filters."}),(0,r.jsx)("button",{className:"create-button",onClick:()=>m(!0),children:"Add First Credential"})]}):J.map(e=>(0,r.jsxs)("div",{className:"credential-card",children:[(0,r.jsxs)("div",{className:"credential-header",children:[(0,r.jsxs)("div",{className:"credential-title",children:[(0,r.jsx)("h3",{children:e.person_name}),(0,r.jsx)("span",{className:"credential-type",children:e.credential_type})]}),(0,r.jsxs)("div",{className:"credential-badges",children:[F(e),e.renewal_required&&(0,r.jsx)("span",{className:"renewal-badge",children:"Renewal Required"})]})]}),(0,r.jsxs)("div",{className:"credential-details",children:[(0,r.jsxs)("div",{className:"detail-row",children:[(0,r.jsx)("span",{className:"detail-label",children:"Issue Date:"}),(0,r.jsx)("span",{className:"detail-value",children:new Date(e.issue_date).toLocaleDateString()})]}),(0,r.jsxs)("div",{className:"detail-row",children:[(0,r.jsx)("span",{className:"detail-label",children:"Expiration Date:"}),(0,r.jsx)("span",{className:"detail-value",children:new Date(e.expiration_date).toLocaleDateString()})]}),e.certification_body&&(0,r.jsxs)("div",{className:"detail-row",children:[(0,r.jsx)("span",{className:"detail-label",children:"Certification Body:"}),(0,r.jsx)("span",{className:"detail-value",children:e.certification_body})]}),e.certificate_number&&(0,r.jsxs)("div",{className:"detail-row",children:[(0,r.jsx)("span",{className:"detail-label",children:"Certificate Number:"}),(0,r.jsx)("span",{className:"detail-value",children:e.certificate_number})]}),e.equipment_types&&(0,r.jsxs)("div",{className:"detail-row",children:[(0,r.jsx)("span",{className:"detail-label",children:"Equipment Types:"}),(0,r.jsx)("span",{className:"detail-value",children:JSON.parse(e.equipment_types).join(", ")})]})]}),e.notes&&(0,r.jsxs)("div",{className:"credential-notes",children:[(0,r.jsx)("h4",{children:"\ud83d\udcdd Notes:"}),(0,r.jsx)("p",{children:e.notes})]}),(0,r.jsxs)("div",{className:"credential-actions",children:[(0,r.jsx)("button",{className:"action-button view-certificate",children:"View Certificate"}),(0,r.jsx)("button",{className:"action-button renew",onClick:()=>L(e),children:"Renew Credential"}),(0,r.jsx)("button",{className:"action-button edit",children:"Edit"}),"active"===e.status&&(0,r.jsx)("button",{className:"action-button suspend",children:"Suspend"})]})]},e.id))}),j&&(0,r.jsx)("div",{className:"modal-overlay",children:(0,r.jsxs)("div",{className:"modal-content",children:[(0,r.jsxs)("div",{className:"modal-header",children:[(0,r.jsx)("h2",{children:"Check Work Assignment Credentials"}),(0,r.jsx)("button",{className:"close-button",onClick:()=>{v(!1),B()},children:"\xd7"})]}),(0,r.jsxs)("form",{onSubmit:async a=>{a.preventDefault();try{const a=await window.api.credentials.getByPerson(E.personName),s=t.find(e=>e.id===parseInt(E.workOrderId)),i=[];$(s,E.equipmentType).forEach(e=>{const s=a.find(a=>a.credential_type===e.type&&(!a.equipment_types||JSON.parse(a.equipment_types).includes(E.equipmentType)));if(s){const a=P(s);i.push({required:e.type,status:"current"===a?"valid":a,credential:s,message:"current"===a?`\u2705 Valid ${e.type} credential`:`\u274c ${e.type} credential is ${a}`})}else i.push({required:e.type,status:"missing",credential:null,message:`\u274c Missing required ${e.type} credential`})}),T(i),await window.api.auditLog.create({userId:(null===e||void 0===e?void 0:e.id)||null,username:(null===e||void 0===e?void 0:e.username)||"Unknown User",action:"credential_check",entityType:"work_order",entityId:parseInt(E.workOrderId),oldValues:null,newValues:JSON.stringify({personName:E.personName,equipmentType:E.equipmentType,results:i}),ipAddress:null,userAgent:navigator.userAgent})}catch(s){console.error("Error checking credentials:",s),u(s.message)}},className:"create-form",children:[(0,r.jsxs)("div",{className:"form-group",children:[(0,r.jsx)("label",{children:"Person Name *"}),(0,r.jsxs)("select",{value:E.personName,onChange:e=>I({...E,personName:e.target.value}),required:!0,children:[(0,r.jsx)("option",{value:"",children:"Select Person"}),V.map(e=>(0,r.jsx)("option",{value:e,children:e},e))]})]}),(0,r.jsxs)("div",{className:"form-group",children:[(0,r.jsx)("label",{children:"Work Order *"}),(0,r.jsxs)("select",{value:E.workOrderId,onChange:e=>I({...E,workOrderId:e.target.value}),required:!0,children:[(0,r.jsx)("option",{value:"",children:"Select Work Order"}),t.filter(e=>"closed"!==e.status).map(e=>(0,r.jsxs)("option",{value:e.id,children:[e.wo_number," - ",e.title]},e.id))]})]}),(0,r.jsxs)("div",{className:"form-group",children:[(0,r.jsx)("label",{children:"Equipment Type *"}),(0,r.jsx)("input",{type:"text",value:E.equipmentType,onChange:e=>I({...E,equipmentType:e.target.value}),required:!0,placeholder:"e.g., Overhead Crane, Mobile Crane"})]}),(0,r.jsxs)("div",{className:"form-actions",children:[(0,r.jsx)("button",{type:"button",onClick:()=>{v(!1),B()},className:"cancel-button",children:"Cancel"}),(0,r.jsx)("button",{type:"submit",className:"submit-button",children:"Check Credentials"})]})]}),q.length>0&&(0,r.jsxs)("div",{className:"credential-check-results",children:[(0,r.jsx)("h3",{children:"Credential Check Results"}),q.map((e,a)=>(0,r.jsxs)("div",{className:`check-result ${e.status}`,children:[(0,r.jsx)("span",{className:"result-message",children:e.message}),e.credential&&(0,r.jsx)("div",{className:"result-details",children:(0,r.jsxs)("small",{children:["Expires: ",new Date(e.credential.expiration_date).toLocaleDateString(),e.credential.certificate_number&&` | Cert: ${e.credential.certificate_number}`]})})]},a))]})]})}),(p||h)&&(0,r.jsx)("div",{className:"modal-overlay",children:(0,r.jsxs)("div",{className:"modal-content large",children:[(0,r.jsxs)("div",{className:"modal-header",children:[(0,r.jsx)("h2",{children:h?"Renew Credential":"Add Credential"}),(0,r.jsx)("button",{className:"close-button",onClick:()=>{m(!1),x(!1),M()},children:"\xd7"})]}),(0,r.jsxs)("form",{onSubmit:async a=>{a.preventDefault();try{const a={...D,equipmentTypes:D.equipmentTypes?JSON.stringify(D.equipmentTypes.split(",").map(e=>e.trim())):null,renewalRequired:D.renewalRequired?1:0},s=await window.api.credentials.create(a),i=(null===s||void 0===s?void 0:s.lastID)||(null===s||void 0===s?void 0:s.id)||0;await window.api.auditLog.create({userId:(null===e||void 0===e?void 0:e.id)||null,username:(null===e||void 0===e?void 0:e.username)||"Unknown User",action:"create",entityType:"credential",entityId:i,oldValues:null,newValues:JSON.stringify(a),ipAddress:null,userAgent:navigator.userAgent}),m(!1),x(!1),M(),await A(),await R()}catch(s){console.error("Error creating credential:",s),u(s.message)}},className:"create-form",children:[(0,r.jsxs)("div",{className:"form-row",children:[(0,r.jsxs)("div",{className:"form-group",children:[(0,r.jsx)("label",{children:"Person Name *"}),(0,r.jsx)("input",{type:"text",value:D.personName,onChange:e=>O({...D,personName:e.target.value}),required:!0,placeholder:"Full name of credential holder",disabled:h})]}),(0,r.jsxs)("div",{className:"form-group",children:[(0,r.jsx)("label",{children:"Credential Type *"}),(0,r.jsxs)("select",{value:D.credentialType,onChange:e=>O({...D,credentialType:e.target.value}),required:!0,disabled:h,children:[(0,r.jsx)("option",{value:"",children:"Select Credential Type"}),["Crane Operator","Rigger","Signal Person","Inspector","Maintenance Technician","Safety Officer","Supervisor","Other"].map(e=>(0,r.jsx)("option",{value:e,children:e},e))]})]})]}),(0,r.jsxs)("div",{className:"form-group",children:[(0,r.jsx)("label",{children:"Equipment Types (comma-separated)"}),(0,r.jsx)("input",{type:"text",value:D.equipmentTypes,onChange:e=>O({...D,equipmentTypes:e.target.value}),placeholder:"e.g., Overhead Crane, Mobile Crane, Hoist"})]}),(0,r.jsxs)("div",{className:"form-row",children:[(0,r.jsxs)("div",{className:"form-group",children:[(0,r.jsx)("label",{children:"Certification Body *"}),(0,r.jsxs)("select",{value:D.certificationBody,onChange:e=>O({...D,certificationBody:e.target.value}),required:!0,children:[(0,r.jsx)("option",{value:"",children:"Select Certification Body"}),["NCCCO (National Commission for the Certification of Crane Operators)","OSHA (Occupational Safety and Health Administration)","ASME (American Society of Mechanical Engineers)","AWS (American Welding Society)","Company Internal","Other"].map(e=>(0,r.jsx)("option",{value:e,children:e},e))]})]}),(0,r.jsxs)("div",{className:"form-group",children:[(0,r.jsx)("label",{children:"Certificate Number"}),(0,r.jsx)("input",{type:"text",value:D.certificateNumber,onChange:e=>O({...D,certificateNumber:e.target.value}),placeholder:"Certificate or license number"})]})]}),(0,r.jsxs)("div",{className:"form-row",children:[(0,r.jsxs)("div",{className:"form-group",children:[(0,r.jsx)("label",{children:"Issue Date *"}),(0,r.jsx)("input",{type:"date",value:D.issueDate,onChange:e=>O({...D,issueDate:e.target.value}),required:!0})]}),(0,r.jsxs)("div",{className:"form-group",children:[(0,r.jsx)("label",{children:"Expiration Date *"}),(0,r.jsx)("input",{type:"date",value:D.expirationDate,onChange:e=>O({...D,expirationDate:e.target.value}),required:!0})]})]}),(0,r.jsx)("div",{className:"form-group",children:(0,r.jsxs)("label",{className:"checkbox-label",children:[(0,r.jsx)("input",{type:"checkbox",checked:D.renewalRequired,onChange:e=>O({...D,renewalRequired:e.target.checked})}),"Renewal Required"]})}),(0,r.jsxs)("div",{className:"form-group",children:[(0,r.jsx)("label",{children:"Notes"}),(0,r.jsx)("textarea",{value:D.notes,onChange:e=>O({...D,notes:e.target.value}),rows:"3",placeholder:"Additional notes about the credential"})]}),(0,r.jsxs)("div",{className:"form-actions",children:[(0,r.jsx)("button",{type:"button",onClick:()=>{m(!1),x(!1),M()},className:"cancel-button",children:"Cancel"}),(0,r.jsx)("button",{type:"submit",className:"submit-button",children:h?"Renew Credential":"Add Credential"})]})]})]})})]})}}}]);
//# sourceMappingURL=460.38fd56db.chunk.js.map