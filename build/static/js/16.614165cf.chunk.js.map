{"version":3,"file":"static/js/16.614165cf.chunk.js","mappings":"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","sources":["components/ComplianceManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ComplianceManager.css';\r\n\r\nfunction ComplianceManager() {\r\n  const [standards, setStandards] = useState([]);\r\n  const [equipmentTypes, setEquipmentTypes] = useState([]);\r\n  const [selectedStandard, setSelectedStandard] = useState('');\r\n  const [selectedEquipmentType, setSelectedEquipmentType] = useState('');\r\n  const [assignedStandards, setAssignedStandards] = useState([]);\r\n  const [newStandardName, setNewStandardName] = useState('');\r\n  const [newStandardDescription, setNewStandardDescription] = useState('');\r\n  const [newStandardAuthority, setNewStandardAuthority] = useState('');\r\n  const [complianceStatus, setComplianceStatus] = useState([]);\r\n  const [isLoadingCompliance, setIsLoadingCompliance] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchStandards();\r\n    fetchEquipmentTypes();\r\n  }, []);\r\n\r\n  const fetchStandards = async () => {\r\n    const standardList = await window.api.compliance.getAllStandards();\r\n    setStandards(standardList);\r\n  };\r\n\r\n  const fetchEquipmentTypes = async () => {\r\n    const types = await window.api.equipment.getDistinctTypes();\r\n    setEquipmentTypes(types.map(t => t.type));\r\n  };\r\n\r\n  const handleAddStandard = async (e) => {\r\n    e.preventDefault();\r\n    if (!newStandardName) {\r\n      alert('Please enter a standard name.');\r\n      return;\r\n    }\r\n    await window.api.compliance.createStandard({\r\n      name: newStandardName,\r\n      description: newStandardDescription,\r\n      authority: newStandardAuthority\r\n    });\r\n    fetchStandards();\r\n    setNewStandardName('');\r\n    setNewStandardDescription('');\r\n    setNewStandardAuthority('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedEquipmentType) {\r\n      fetchAssignedStandards(selectedEquipmentType);\r\n    } else {\r\n      setAssignedStandards([]);\r\n    }\r\n  }, [selectedEquipmentType]);\r\n\r\n  const fetchAssignedStandards = async (equipmentType) => {\r\n    const assigned = await window.api.compliance.getAssignedStandards(equipmentType);\r\n    setAssignedStandards(assigned);\r\n  };\r\n\r\n  const handleAssignStandard = async (e) => {\r\n    e.preventDefault();\r\n    if (!selectedEquipmentType || !selectedStandard) {\r\n      alert('Please select an equipment type and a standard.');\r\n      return;\r\n    }\r\n    await window.api.compliance.assignStandard(selectedEquipmentType, selectedStandard);\r\n    fetchAssignedStandards(selectedEquipmentType);\r\n    alert('Standard assigned successfully.');\r\n  };\r\n\r\n  const handleUnassignStandard = async (standardId) => {\r\n    if (!selectedEquipmentType) return;\r\n    await window.api.compliance.unassignStandard(selectedEquipmentType, standardId);\r\n    fetchAssignedStandards(selectedEquipmentType);\r\n  };\r\n\r\n  const handleDeleteStandard = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this standard? This will also remove all assignments.')) {\r\n      // In a real app, you might want to handle assignments more gracefully.\r\n      // For now, we'll just delete the standard. The assignments will be orphaned but won't cause errors.\r\n      // A better approach would be to use a transaction to delete assignments first.\r\n      await window.api.compliance.deleteStandard(id);\r\n      fetchStandards();\r\n    }\r\n  };\r\n\r\n  const calculateComplianceStatus = async () => {\r\n    setIsLoadingCompliance(true);\r\n\r\n    const equipment = await window.api.equipment.getAll();\r\n    const requirements = await window.api.compliance.getComplianceReport();\r\n    const inspections = await window.api.inspections.getLastInspectionByEquipment();\r\n\r\n    const inspectionsMap = inspections.reduce((acc, insp) => {\r\n      acc[insp.equipment_id] = insp.last_inspection_date;\r\n      return acc;\r\n    }, {});\r\n\r\n    const requirementsMap = requirements.reduce((acc, req) => {\r\n      if (!acc[req.equipment_type]) {\r\n        acc[req.equipment_type] = [];\r\n      }\r\n      acc[req.equipment_type].push(req.standard_name);\r\n      return acc;\r\n    }, {});\r\n\r\n    const status = equipment.map(item => {\r\n      const requiredStandards = requirementsMap[item.type] || [];\r\n      if (requiredStandards.length === 0) {\r\n        return { ...item, status: 'N/A', reason: 'No standards assigned to type' };\r\n      }\r\n\r\n      const lastInspectionDate = inspectionsMap[item.id];\r\n      if (!lastInspectionDate) {\r\n        return { ...item, status: 'Non-Compliant', reason: 'No inspection history' };\r\n      }\r\n\r\n      const oneYearAgo = new Date();\r\n      oneYearAgo.setFullYear(oneYearAgo.getFullYear() - 1);\r\n      const inspectionDate = new Date(lastInspectionDate);\r\n\r\n      if (inspectionDate < oneYearAgo) {\r\n        return { ...item, status: 'Non-Compliant', reason: `Last inspection on ${lastInspectionDate} (over 1 year ago)` };\r\n      }\r\n\r\n      return { ...item, status: 'Compliant', reason: `Last inspection on ${lastInspectionDate}` };\r\n    });\r\n\r\n    setComplianceStatus(status);\r\n    setIsLoadingCompliance(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"compliance-manager\">\r\n      <h2>Compliance Management</h2>\r\n\r\n      <div className=\"standards-list\">\r\n        <h3>Existing Standards</h3>\r\n        <ul>\r\n          {standards.map((standard) => (\r\n            <li key={standard.id}>\r\n              <strong>{standard.name}</strong> ({standard.authority}): {standard.description}\r\n              <button onClick={() => handleDeleteStandard(standard.id)} className=\"delete-button\">Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"add-standard-form\">\r\n        <h3>Add New Standard</h3>\r\n        <form onSubmit={handleAddStandard}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Standard Name (e.g., OSHA 1910.179)\"\r\n            value={newStandardName}\r\n            onChange={(e) => setNewStandardName(e.target.value)}\r\n            required\r\n          />\r\n          <textarea\r\n            placeholder=\"Description\"\r\n            value={newStandardDescription}\r\n            onChange={(e) => setNewStandardDescription(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Authority (e.g., OSHA)\"\r\n            value={newStandardAuthority}\r\n            onChange={(e) => setNewStandardAuthority(e.target.value)}\r\n          />\r\n          <button type=\"submit\">Add Standard</button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"assign-standard-form\">\r\n        <h3>Assign Standard to Equipment Type</h3>\r\n        <form onSubmit={handleAssignStandard}>\r\n          <select\r\n            value={selectedEquipmentType}\r\n            onChange={(e) => setSelectedEquipmentType(e.target.value)}\r\n            required\r\n          >\r\n            <option value=\"\">Select Equipment Type</option>\r\n            {equipmentTypes.map((type) => (\r\n              <option key={type} value={type}>\r\n                {type}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            value={selectedStandard}\r\n            onChange={(e) => setSelectedStandard(e.target.value)}\r\n            required\r\n          >\r\n            <option value=\"\">Select Standard</option>\r\n            {standards.map((standard) => (\r\n              <option key={standard.id} value={standard.id}>\r\n                {standard.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button type=\"submit\">Assign Standard</button>\r\n        </form>\r\n        {selectedEquipmentType && (\r\n          <div className=\"assigned-standards-list\">\r\n            <h4>Assigned to {selectedEquipmentType}</h4>\r\n            <ul>\r\n              {assignedStandards.map((standard) => (\r\n                <li key={standard.id}>\r\n                  {standard.name}\r\n                  <button onClick={() => handleUnassignStandard(standard.id)} className=\"delete-button\">Remove</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"compliance-status-checker\">\r\n        <h3>Equipment Compliance Status</h3>\r\n        <button onClick={calculateComplianceStatus} disabled={isLoadingCompliance}>\r\n          {isLoadingCompliance ? 'Calculating...' : 'Calculate Compliance Status'}\r\n        </button>\r\n        {complianceStatus.length > 0 && (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Equipment ID</th>\r\n                <th>Type</th>\r\n                <th>Status</th>\r\n                <th>Reason</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {complianceStatus.map(item => (\r\n                <tr key={item.id} className={`status-${item.status.toLowerCase().replace(' ', '-')}`}>\r\n                  <td>{item.equipment_id}</td>\r\n                  <td>{item.type}</td>\r\n                  <td>{item.status}</td>\r\n                  <td>{item.reason}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComplianceManager;\r\n"],"names":["standards","setStandards","useState","equipmentTypes","setEquipmentTypes","selectedStandard","setSelectedStandard","selectedEquipmentType","setSelectedEquipmentType","assignedStandards","setAssignedStandards","newStandardName","setNewStandardName","newStandardDescription","setNewStandardDescription","newStandardAuthority","setNewStandardAuthority","complianceStatus","setComplianceStatus","isLoadingCompliance","setIsLoadingCompliance","useEffect","fetchStandards","fetchEquipmentTypes","async","standardList","window","api","compliance","getAllStandards","types","equipment","getDistinctTypes","map","t","type","fetchAssignedStandards","assigned","getAssignedStandards","equipmentType","_jsxs","className","children","_jsx","standard","name","authority","description","onClick","confirm","deleteStandard","id","handleDeleteStandard","onSubmit","e","preventDefault","createStandard","alert","placeholder","value","onChange","target","required","assignStandard","unassignStandard","standardId","handleUnassignStandard","getAll","requirements","getComplianceReport","inspectionsMap","inspections","getLastInspectionByEquipment","reduce","acc","insp","equipment_id","last_inspection_date","requirementsMap","req","equipment_type","push","standard_name","status","item","length","reason","lastInspectionDate","oneYearAgo","Date","setFullYear","getFullYear","disabled","toLowerCase","replace"],"sourceRoot":""}