"use strict";(self.webpackChunkjsg_inspections=self.webpackChunkjsg_inspections||[]).push([[82],{8082:(e,t,s)=>{s.r(t),s.d(t,{default:()=>n});var a=s(5043),i=s(4107),l=s(579);const n=()=>{const{currentUser:e}=(0,i.J)(),[t,s]=(0,a.useState)([]),[n,r]=(0,a.useState)([]),[d,c]=(0,a.useState)(!0),[o,u]=(0,a.useState)(null),[p,h]=(0,a.useState)(!1),[m,x]=(0,a.useState)(!1),[v,j]=(0,a.useState)(""),[g,N]=(0,a.useState)("all"),[f,b]=(0,a.useState)(null),[y,D]=(0,a.useState)([]),[w,_]=(0,a.useState)({equipmentId:"",testDate:(new Date).toISOString().split("T")[0],testType:"annual",testLoadPercentage:100,ratedCapacity:"",testLoad:"",testDuration:"",inspector:"",testResults:"pass",deficienciesFound:"",correctiveActions:"",nextTestDue:"",certificateNumber:"",notes:""});(0,a.useEffect)(()=>{T(),S()},[]);const T=async()=>{try{c(!0),u(null);const[e]=await Promise.all([window.api.equipment.getAll()]);r(e);const t=e.map(e=>window.api.loadTests.getByEquipmentId(e.id)),a=(await Promise.all(t)).flat();s(a)}catch(e){console.error("Error loading load tests data:",e),u(e.message)}finally{c(!1)}},S=async()=>{try{const e=new Date,t=new Date(e.getTime()+2592e6),s=await window.api.loadTests.getDue(t.toISOString().split("T")[0]),a=await window.api.loadTests.getOverdue(),i=[];a.forEach(e=>{i.push({type:"critical",message:`Load test for ${e.equipment_identifier} is overdue (due: ${new Date(e.next_test_due).toLocaleDateString()})`,equipmentId:e.equipment_id,testId:e.id,dueDate:e.next_test_due})}),s.forEach(t=>{const s=new Date(t.next_test_due),a=Math.ceil((s-e)/864e5);a<=30&&a>=0&&i.push({type:a<=7?"warning":"info",message:`Load test for ${t.equipment_identifier} due in ${a} days (${s.toLocaleDateString()})`,equipmentId:t.equipment_id,testId:t.id,dueDate:t.next_test_due})}),D(i)}catch(e){console.error("Error checking upcoming tests:",e)}},C=async e=>{try{var t;n.find(t=>t.id===e.equipment_id);const s=new Date(e.test_date),a=new Date(s);"annual"===e.test_type?a.setFullYear(a.getFullYear()+1):"periodic"===e.test_type?a.setMonth(a.getMonth()+6):a.setFullYear(a.getFullYear()+1),_({equipmentId:e.equipment_id.toString(),testDate:a.toISOString().split("T")[0],testType:e.test_type,testLoadPercentage:e.test_load_percentage,ratedCapacity:e.rated_capacity.toString(),testLoad:"",testDuration:(null===(t=e.test_duration)||void 0===t?void 0:t.toString())||"",inspector:e.inspector,testResults:"pass",deficienciesFound:"",correctiveActions:"",nextTestDue:"",certificateNumber:"",notes:`Scheduled follow-up to test #${e.id}`}),b(e),x(!0)}catch(s){console.error("Error scheduling next test:",s),u(s.message)}},q=()=>{_({equipmentId:"",testDate:(new Date).toISOString().split("T")[0],testType:"annual",testLoadPercentage:100,ratedCapacity:"",testLoad:"",testDuration:"",inspector:"",testResults:"pass",deficienciesFound:"",correctiveActions:"",nextTestDue:"",certificateNumber:"",notes:""}),b(null)},L=e=>{if(!e.next_test_due)return"no-date";const t=new Date,s=new Date(e.next_test_due)-t,a=Math.ceil(s/864e5);return a<0?"overdue":a<=30?"due-soon":a<=90?"upcoming":"current"},I=e=>{const t={overdue:{class:"status-overdue",label:"Overdue"},"due-soon":{class:"status-due-soon",label:"Due Soon"},upcoming:{class:"status-upcoming",label:"Due in 90 Days"},current:{class:"status-current",label:"Current"},"no-date":{class:"status-no-date",label:"No Due Date"}}[L(e)];return(0,l.jsx)("span",{className:`status-badge ${t.class}`,children:t.label})};if(d)return(0,l.jsxs)("div",{className:"load-tests",children:[(0,l.jsx)("div",{className:"load-tests-header",children:(0,l.jsx)("h1",{children:"Load Tests"})}),(0,l.jsx)("div",{className:"loading-spinner",children:"Loading load tests data..."})]});if(o)return(0,l.jsxs)("div",{className:"load-tests",children:[(0,l.jsx)("div",{className:"load-tests-header",children:(0,l.jsx)("h1",{children:"Load Tests"})}),(0,l.jsxs)("div",{className:"error-message",children:[(0,l.jsxs)("p",{children:["Error loading load tests: ",o]}),(0,l.jsx)("button",{onClick:T,className:"retry-button",children:"Retry"})]})]});const F=(()=>{let e=t;return v&&(e=e.filter(e=>e.equipment_id===parseInt(v))),"all"!==g&&(e=e.filter(e=>L(e)===g)),e.sort((e,t)=>new Date(t.test_date)-new Date(e.test_date))})(),k=n.filter(e=>e.type&&(e.type.toLowerCase().includes("crane")||e.type.toLowerCase().includes("hoist")||e.type.toLowerCase().includes("lift")));return(0,l.jsxs)("div",{className:"load-tests",children:[(0,l.jsxs)("div",{className:"load-tests-header",children:[(0,l.jsx)("h1",{children:"Load Tests"}),(0,l.jsx)("div",{className:"header-actions",children:(0,l.jsx)("button",{className:"create-button",onClick:()=>h(!0),children:"+ Schedule Load Test"})})]}),y.length>0&&(0,l.jsxs)("div",{className:"load-test-notifications",children:[(0,l.jsx)("h3",{children:"\ud83d\udd14 Load Test Alerts"}),y.map((e,t)=>(0,l.jsxs)("div",{className:`notification ${e.type}`,children:[(0,l.jsx)("span",{className:"notification-message",children:e.message}),(0,l.jsx)("button",{className:"notification-action",onClick:()=>C({equipment_id:e.equipmentId,id:e.testId,next_test_due:e.dueDate}),children:"Schedule Test"})]},t))]}),(0,l.jsxs)("div",{className:"load-tests-summary",children:[(0,l.jsxs)("div",{className:"summary-card",children:[(0,l.jsx)("span",{className:"summary-value",children:t.length}),(0,l.jsx)("span",{className:"summary-label",children:"Total Tests"})]}),(0,l.jsxs)("div",{className:"summary-card",children:[(0,l.jsx)("span",{className:"summary-value status-critical",children:t.filter(e=>"overdue"===L(e)).length}),(0,l.jsx)("span",{className:"summary-label",children:"Overdue"})]}),(0,l.jsxs)("div",{className:"summary-card",children:[(0,l.jsx)("span",{className:"summary-value status-warning",children:t.filter(e=>"due-soon"===L(e)).length}),(0,l.jsx)("span",{className:"summary-label",children:"Due Soon"})]}),(0,l.jsxs)("div",{className:"summary-card",children:[(0,l.jsx)("span",{className:"summary-value status-good",children:t.filter(e=>"pass"===e.test_results).length}),(0,l.jsx)("span",{className:"summary-label",children:"Passed"})]})]}),(0,l.jsxs)("div",{className:"load-tests-filters",children:[(0,l.jsxs)("div",{className:"filter-group",children:[(0,l.jsx)("label",{children:"Equipment:"}),(0,l.jsxs)("select",{value:v,onChange:e=>j(e.target.value),children:[(0,l.jsx)("option",{value:"",children:"All Equipment"}),k.map(e=>(0,l.jsxs)("option",{value:e.id,children:[e.equipment_id," - ",e.type]},e.id))]})]}),(0,l.jsxs)("div",{className:"filter-group",children:[(0,l.jsx)("label",{children:"Status:"}),(0,l.jsxs)("select",{value:g,onChange:e=>N(e.target.value),children:[(0,l.jsx)("option",{value:"all",children:"All Status"}),(0,l.jsx)("option",{value:"overdue",children:"Overdue"}),(0,l.jsx)("option",{value:"due-soon",children:"Due Soon"}),(0,l.jsx)("option",{value:"upcoming",children:"Upcoming"}),(0,l.jsx)("option",{value:"current",children:"Current"})]})]})]}),(0,l.jsx)("div",{className:"load-tests-list",children:0===F.length?(0,l.jsxs)("div",{className:"empty-state",children:[(0,l.jsx)("p",{children:"No load tests found matching the current filters."}),(0,l.jsx)("button",{className:"create-button",onClick:()=>h(!0),children:"Schedule First Load Test"})]}):F.map(e=>{const t=n.find(t=>t.id===e.equipment_id);return(0,l.jsxs)("div",{className:"load-test-card",children:[(0,l.jsxs)("div",{className:"test-header",children:[(0,l.jsxs)("div",{className:"test-title",children:[(0,l.jsxs)("h3",{children:[null===t||void 0===t?void 0:t.equipment_id," - ",null===t||void 0===t?void 0:t.type]}),(0,l.jsxs)("span",{className:"test-type",children:[e.test_type," Load Test"]})]}),(0,l.jsxs)("div",{className:"test-badges",children:[I(e),(0,l.jsx)("span",{className:`result-badge ${e.test_results}`,children:"pass"===e.test_results?"\u2705 Passed":"\u274c Failed"})]})]}),(0,l.jsxs)("div",{className:"test-details",children:[(0,l.jsxs)("div",{className:"detail-row",children:[(0,l.jsx)("span",{className:"detail-label",children:"Test Date:"}),(0,l.jsx)("span",{className:"detail-value",children:new Date(e.test_date).toLocaleDateString()})]}),(0,l.jsxs)("div",{className:"detail-row",children:[(0,l.jsx)("span",{className:"detail-label",children:"Test Load:"}),(0,l.jsxs)("span",{className:"detail-value",children:[e.test_load," lbs (",e.test_load_percentage,"% of ",e.rated_capacity," lbs)"]})]}),(0,l.jsxs)("div",{className:"detail-row",children:[(0,l.jsx)("span",{className:"detail-label",children:"Inspector:"}),(0,l.jsx)("span",{className:"detail-value",children:e.inspector})]}),e.next_test_due&&(0,l.jsxs)("div",{className:"detail-row",children:[(0,l.jsx)("span",{className:"detail-label",children:"Next Test Due:"}),(0,l.jsx)("span",{className:"detail-value",children:new Date(e.next_test_due).toLocaleDateString()})]}),e.certificate_number&&(0,l.jsxs)("div",{className:"detail-row",children:[(0,l.jsx)("span",{className:"detail-label",children:"Certificate:"}),(0,l.jsx)("span",{className:"detail-value",children:e.certificate_number})]})]}),e.deficiencies_found&&(0,l.jsxs)("div",{className:"test-deficiencies",children:[(0,l.jsx)("h4",{children:"\u26a0\ufe0f Deficiencies Found:"}),(0,l.jsx)("p",{children:e.deficiencies_found})]}),e.corrective_actions&&(0,l.jsxs)("div",{className:"test-actions-taken",children:[(0,l.jsx)("h4",{children:"\ud83d\udd27 Corrective Actions:"}),(0,l.jsx)("p",{children:e.corrective_actions})]}),e.notes&&(0,l.jsxs)("div",{className:"test-notes",children:[(0,l.jsx)("h4",{children:"\ud83d\udcdd Notes:"}),(0,l.jsx)("p",{children:e.notes})]}),(0,l.jsxs)("div",{className:"test-actions",children:[(0,l.jsx)("button",{className:"action-button view-certificate",children:"View Certificate"}),(0,l.jsx)("button",{className:"action-button schedule-next",onClick:()=>C(e),children:"Schedule Next Test"}),(0,l.jsx)("button",{className:"action-button edit",children:"Edit Test"})]})]},e.id)})}),(p||m)&&(0,l.jsx)("div",{className:"modal-overlay",children:(0,l.jsxs)("div",{className:"modal-content large",children:[(0,l.jsxs)("div",{className:"modal-header",children:[(0,l.jsx)("h2",{children:m?"Schedule Next Load Test":"Schedule Load Test"}),(0,l.jsx)("button",{className:"close-button",onClick:()=>{h(!1),x(!1),q()},children:"\xd7"})]}),(0,l.jsxs)("form",{onSubmit:async t=>{t.preventDefault();try{const t=w.testLoad||parseFloat(w.ratedCapacity)*(w.testLoadPercentage/100),s=new Date(w.testDate),a=new Date(s);"annual"===w.testType?a.setFullYear(a.getFullYear()+1):"periodic"===w.testType?a.setMonth(a.getMonth()+6):a.setFullYear(a.getFullYear()+1);const i={...w,equipmentId:parseInt(w.equipmentId),testLoadPercentage:parseInt(w.testLoadPercentage),ratedCapacity:parseFloat(w.ratedCapacity),testLoad:t,testDuration:w.testDuration?parseInt(w.testDuration):null,nextTestDue:w.nextTestDue||a.toISOString().split("T")[0]},l=await window.api.loadTests.create(i),r=(null===l||void 0===l?void 0:l.lastID)||(null===l||void 0===l?void 0:l.id)||0;if(await window.api.auditLog.create({userId:(null===e||void 0===e?void 0:e.id)||null,username:(null===e||void 0===e?void 0:e.username)||"Unknown User",action:"create",entityType:"load_test",entityId:r,oldValues:null,newValues:JSON.stringify(i),ipAddress:null,userAgent:navigator.userAgent}),"pass"===w.testResults){const e=n.find(e=>e.id===parseInt(w.equipmentId)),t=`LT-${null===e||void 0===e?void 0:e.equipment_id}-${(new Date).getFullYear()}-${String(Date.now()).slice(-4)}`;await window.api.certificates.create({certificateNumber:t,certificateType:"load_test",equipmentId:parseInt(w.equipmentId),entityId:r,issueDate:w.testDate,expirationDate:a.toISOString().split("T")[0],issuedBy:w.inspector,qrCodeData:`${window.location.origin}/verify/${t}`,certificateHash:null})}h(!1),q(),await T(),await S()}catch(s){console.error("Error creating load test:",s),u(s.message)}},className:"create-form",children:[(0,l.jsxs)("div",{className:"form-row",children:[(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{children:"Equipment *"}),(0,l.jsxs)("select",{value:w.equipmentId,onChange:e=>_({...w,equipmentId:e.target.value}),required:!0,disabled:m,children:[(0,l.jsx)("option",{value:"",children:"Select Equipment"}),k.map(e=>(0,l.jsxs)("option",{value:e.id,children:[e.equipment_id," - ",e.type," (",e.capacity," lbs)"]},e.id))]})]}),(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{children:"Test Date *"}),(0,l.jsx)("input",{type:"date",value:w.testDate,onChange:e=>_({...w,testDate:e.target.value}),required:!0})]})]}),(0,l.jsxs)("div",{className:"form-row",children:[(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{children:"Test Type *"}),(0,l.jsxs)("select",{value:w.testType,onChange:e=>_({...w,testType:e.target.value}),required:!0,children:[(0,l.jsx)("option",{value:"annual",children:"Annual"}),(0,l.jsx)("option",{value:"periodic",children:"Periodic"}),(0,l.jsx)("option",{value:"initial",children:"Initial"}),(0,l.jsx)("option",{value:"after_repair",children:"After Repair"})]})]}),(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{children:"Test Load Percentage *"}),(0,l.jsxs)("select",{value:w.testLoadPercentage,onChange:e=>_({...w,testLoadPercentage:e.target.value}),required:!0,children:[(0,l.jsx)("option",{value:"100",children:"100% (Rated Load)"}),(0,l.jsx)("option",{value:"110",children:"110% (Proof Load)"}),(0,l.jsx)("option",{value:"125",children:"125% (Initial Test)"})]})]})]}),(0,l.jsxs)("div",{className:"form-row",children:[(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{children:"Rated Capacity (lbs) *"}),(0,l.jsx)("input",{type:"number",min:"0",step:"0.01",value:w.ratedCapacity,onChange:e=>_({...w,ratedCapacity:e.target.value}),required:!0,placeholder:"e.g., 5000"})]}),(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{children:"Test Duration (minutes)"}),(0,l.jsx)("input",{type:"number",min:"0",value:w.testDuration,onChange:e=>_({...w,testDuration:e.target.value}),placeholder:"e.g., 10"})]})]}),(0,l.jsxs)("div",{className:"form-row",children:[(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{children:"Inspector *"}),(0,l.jsx)("input",{type:"text",value:w.inspector,onChange:e=>_({...w,inspector:e.target.value}),required:!0,placeholder:"Inspector name"})]}),(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{children:"Test Results *"}),(0,l.jsxs)("select",{value:w.testResults,onChange:e=>_({...w,testResults:e.target.value}),required:!0,children:[(0,l.jsx)("option",{value:"pass",children:"Pass"}),(0,l.jsx)("option",{value:"fail",children:"Fail"})]})]})]}),"fail"===w.testResults&&(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{children:"Deficiencies Found *"}),(0,l.jsx)("textarea",{value:w.deficienciesFound,onChange:e=>_({...w,deficienciesFound:e.target.value}),rows:"3",required:!0,placeholder:"Describe deficiencies found during the test"})]}),(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{children:"Corrective Actions"}),(0,l.jsx)("textarea",{value:w.correctiveActions,onChange:e=>_({...w,correctiveActions:e.target.value}),rows:"3",placeholder:"Describe any corrective actions taken"})]}),(0,l.jsxs)("div",{className:"form-row",children:[(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{children:"Certificate Number"}),(0,l.jsx)("input",{type:"text",value:w.certificateNumber,onChange:e=>_({...w,certificateNumber:e.target.value}),placeholder:"Will be auto-generated if blank"})]}),(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{children:"Next Test Due"}),(0,l.jsx)("input",{type:"date",value:w.nextTestDue,onChange:e=>_({...w,nextTestDue:e.target.value}),placeholder:"Will be auto-calculated if blank"})]})]}),(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{children:"Notes"}),(0,l.jsx)("textarea",{value:w.notes,onChange:e=>_({...w,notes:e.target.value}),rows:"3",placeholder:"Additional notes about the test"})]}),(0,l.jsxs)("div",{className:"form-actions",children:[(0,l.jsx)("button",{type:"button",onClick:()=>{h(!1),x(!1),q()},className:"cancel-button",children:"Cancel"}),(0,l.jsx)("button",{type:"submit",className:"submit-button",children:m?"Schedule Next Test":"Create Load Test"})]})]})]})})]})}}}]);
//# sourceMappingURL=82.2607574d.chunk.js.map