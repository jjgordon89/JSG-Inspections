{"version":3,"file":"static/js/928.1b218014.chunk.js","mappings":"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","sources":["components/WorkOrderCreateForm.js"],"sourcesContent":["import React from 'react';\nimport './WorkOrderCreateForm.css';\n\nconst WorkOrderCreateForm = ({ \n  newWorkOrder, \n  setNewWorkOrder, \n  equipment, \n  onSubmit, \n  onCancel \n}) => {\n  const handleInputChange = (field, value) => {\n    setNewWorkOrder(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h2>Create New Work Order</h2>\n          <button \n            className=\"close-button\"\n            onClick={onCancel}\n          >\n            Ã—\n          </button>\n        </div>\n\n        <form onSubmit={onSubmit} className=\"create-form\">\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label>Equipment *</label>\n              <select\n                value={newWorkOrder.equipmentId}\n                onChange={(e) => handleInputChange('equipmentId', e.target.value)}\n                required\n              >\n                <option value=\"\">Select Equipment</option>\n                {equipment.map(eq => (\n                  <option key={eq.id} value={eq.id}>\n                    {eq.identifier} - {eq.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Work Type</label>\n              <select\n                value={newWorkOrder.workType}\n                onChange={(e) => handleInputChange('workType', e.target.value)}\n              >\n                <option value=\"corrective\">Corrective</option>\n                <option value=\"preventive\">Preventive</option>\n                <option value=\"emergency\">Emergency</option>\n                <option value=\"project\">Project</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Title *</label>\n            <input\n              type=\"text\"\n              value={newWorkOrder.title}\n              onChange={(e) => handleInputChange('title', e.target.value)}\n              placeholder=\"Brief description of work to be performed\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Description</label>\n            <textarea\n              value={newWorkOrder.description}\n              onChange={(e) => handleInputChange('description', e.target.value)}\n              rows=\"4\"\n              placeholder=\"Detailed description of the work required, including any specific instructions or safety considerations\"\n            />\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label>Priority</label>\n              <select\n                value={newWorkOrder.priority}\n                onChange={(e) => handleInputChange('priority', e.target.value)}\n              >\n                <option value=\"low\">Low</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"high\">High</option>\n                <option value=\"critical\">Critical</option>\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Estimated Hours</label>\n              <input\n                type=\"number\"\n                step=\"0.5\"\n                min=\"0\"\n                value={newWorkOrder.estimatedHours}\n                onChange={(e) => handleInputChange('estimatedHours', e.target.value)}\n                placeholder=\"0.0\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label>Assigned To</label>\n              <input\n                type=\"text\"\n                value={newWorkOrder.assignedTo}\n                onChange={(e) => handleInputChange('assignedTo', e.target.value)}\n                placeholder=\"Technician or team member name\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Scheduled Date</label>\n              <input\n                type=\"date\"\n                value={newWorkOrder.scheduledDate}\n                onChange={(e) => handleInputChange('scheduledDate', e.target.value)}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-actions\">\n            <button type=\"button\" onClick={onCancel} className=\"cancel-button\">\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"submit-button\">\n              Create Work Order\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkOrderCreateForm;"],"names":["_ref","newWorkOrder","setNewWorkOrder","equipment","onSubmit","onCancel","handleInputChange","field","value","prev","_jsx","className","children","_jsxs","onClick","equipmentId","onChange","e","target","required","map","eq","id","identifier","name","workType","type","title","placeholder","description","rows","priority","step","min","estimatedHours","assignedTo","scheduledDate"],"sourceRoot":""}