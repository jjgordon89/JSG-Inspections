{"version":3,"file":"static/js/596.a99f049e.chunk.js","mappings":"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","sources":["components/DocumentList.js","components/EquipmentCard.js","components/EquipmentList.js","components/QrScanner.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction DocumentList({ equipmentId }) {\r\n  const [documents, setDocuments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (equipmentId) {\r\n      // Use secure operation instead of generic SQL\r\n      window.api.documents.getByEquipmentId(equipmentId).then(result => {\r\n        if (window.api.isError(result)) {\r\n          console.error('Failed to load documents:', window.api.getErrorMessage(result));\r\n          setDocuments([]);\r\n        } else {\r\n          setDocuments(result.data || []);\r\n        }\r\n      });\r\n    }\r\n  }, [equipmentId]);\r\n\r\n  const handleOpenDocument = async (filePath) => {\r\n    try {\r\n      const result = await window.api.openFilePath(filePath);\r\n      if (window.api.isError(result)) {\r\n        console.error('Failed to open document:', window.api.getErrorMessage(result));\r\n        alert(`Failed to open document: ${window.api.getErrorMessage(result)}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error opening document:', error);\r\n      alert('Failed to open document. Please check if the file exists.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Documents</h3>\r\n      <ul>\r\n        {documents.map((doc) => (\r\n          <li key={doc.id}>\r\n            <button \r\n              onClick={() => handleOpenDocument(doc.file_path)}\r\n              className=\"text-blue-600 hover:text-blue-800 underline bg-transparent border-none cursor-pointer\"\r\n            >\r\n              {doc.file_name}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DocumentList;\r\n","import React from 'react';\r\nimport './EquipmentCard.css';\r\nimport DocumentList from './DocumentList';\r\nimport { generateEquipmentPdf } from '../utils/generatePdf';\r\n\r\nfunction EquipmentCard({ equipment, onEdit, onDelete, onViewInspections, onInspect }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{equipment.equipment_id} - {equipment.type}</h5>\r\n        <p className=\"card-text\"><strong>Manufacturer:</strong> {equipment.manufacturer}</p>\r\n        <p className=\"card-text\"><strong>Model:</strong> {equipment.model}</p>\r\n        <p className=\"card-text\"><strong>Serial Number:</strong> {equipment.serial_number}</p>\r\n        <p className=\"card-text\"><strong>Status:</strong> <span className={`status status-${equipment.status.toLowerCase().replace(/ /g, '-')}`}>{equipment.status}</span></p>\r\n        <DocumentList equipmentId={equipment.id} />\r\n        <div className=\"card-buttons\">\r\n          <button onClick={() => onInspect(equipment)} className=\"btn-primary\">Inspect</button>\r\n          <button onClick={() => onViewInspections(equipment.id)} className=\"btn-outline\">View History</button>\r\n          <button onClick={() => onEdit(equipment)} className=\"btn-secondary\">Edit</button>\r\n          <button onClick={() => generateEquipmentPdf(equipment)} className=\"btn-secondary\">PDF</button>\r\n          <button onClick={() => {\r\n            if (window.confirm(`Are you sure you want to delete ${equipment.manufacturer} ${equipment.model}?`)) {\r\n              onDelete(equipment.id);\r\n            }\r\n          }} className=\"btn-danger\">Delete</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EquipmentCard;","import React, { useEffect, useState } from 'react';\r\nimport EquipmentCard from './EquipmentCard';\r\nimport QrScanner from './QrScanner';\r\nimport './EquipmentList.css';\r\nimport { useEquipmentStore } from '../store';\r\n\r\nfunction EquipmentList({ onViewInspections, showToast }) {\r\n  const [equipment, setEquipment] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(5);\r\n\r\n  const [isScannerOpen, setIsScannerOpen] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\nconst fetchEquipment = async () => {\r\n  try {\r\n    setLoading(true);\r\n    setError(null);\r\n    const equipmentData = await window.api.secure.equipment.getAll();\r\n    \r\n    if (Array.isArray(equipmentData)) {\r\n      setEquipment(equipmentData);\r\n    } else {\r\n      throw new Error('Invalid equipment data received');\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to fetch equipment:', error);\r\n    setError(error.message || 'Failed to load equipment');\r\n    if (showToast) showToast('Failed to load equipment');\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n  // Get state and actions from equipmentStore\r\n  const refresh = useEquipmentStore((state) => state.refresh);\r\n  const searchTerm = useEquipmentStore((state) => state.searchTerm);\r\n  const setSearchTerm = useEquipmentStore((state) => state.setSearchTerm);\r\n  const setEditingEquipment = useEquipmentStore((state) => state.setEditingEquipment);\r\n  const setInspectingEquipment = useEquipmentStore((state) => state.setInspectingEquipment);\r\n\r\n  useEffect(() => {\r\n    fetchEquipment();\r\n  }, [refresh]); // Re-fetch when refresh state changes\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await window.api.equipment.delete(id);\r\n      fetchEquipment();\r\n      if (showToast) showToast('Equipment deleted');\r\n    } catch (error) {\r\n      console.error('Failed to delete equipment:', error);\r\n      if (showToast) showToast('Failed to delete equipment');\r\n    }\r\n  };\r\n\r\n  const handleScan = async (scannedData) => {\r\n    if (scannedData) {\r\n      try {\r\n        const equipment = await window.api.equipment.getByEquipmentId(scannedData);\r\n        if (equipment) {\r\n          setInspectingEquipment(equipment);\r\n        } else {\r\n          alert('Equipment not found');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to find equipment:', error);\r\n        alert('Error searching for equipment');\r\n      }\r\n    }\r\n    setIsScannerOpen(false);\r\n  };\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  // Filter equipment by search term (manufacturer or model)\r\n  const filteredEquipment = equipment.filter(\r\n    (item) =>\r\n      ((item.manufacturer || '') || '').toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      ((item.model || '') || '').toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const currentItems = filteredEquipment.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  // Loading state\r\n  if (loading) {\r\n    return (\r\n      <section className=\"equipment-list-section\">\r\n        <div className=\"toolbar\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by manufacturer or model...\"\r\n            value={searchTerm}\r\n            onChange={(e) => {\r\n              setSearchTerm(e.target.value);\r\n              setCurrentPage(1);\r\n            }}\r\n            className=\"equipment-search-input\"\r\n            aria-label=\"Search equipment\"\r\n            disabled\r\n          />\r\n          <button className=\"scan-button\" disabled>Scan Equipment QR</button>\r\n        </div>\r\n        <div className=\"equipment-card-grid\">\r\n          <div style={{ gridColumn: '1/-1', textAlign: 'center', padding: '2rem' }}>\r\n            <div className=\"loading-spinner\">Loading equipment...</div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  // Error state\r\n  if (error) {\r\n    return (\r\n      <section className=\"equipment-list-section\">\r\n        <div className=\"toolbar\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by manufacturer or model...\"\r\n            value={searchTerm}\r\n            onChange={(e) => {\r\n              setSearchTerm(e.target.value);\r\n              setCurrentPage(1);\r\n            }}\r\n            className=\"equipment-search-input\"\r\n            aria-label=\"Search equipment\"\r\n            disabled\r\n          />\r\n          <button className=\"scan-button\" disabled>Scan Equipment QR</button>\r\n        </div>\r\n        <div className=\"equipment-card-grid\">\r\n          <div style={{ gridColumn: '1/-1', textAlign: 'center', padding: '2rem' }}>\r\n            <div className=\"error-message\">\r\n              <p>Error loading equipment: {error}</p>\r\n              <button onClick={fetchEquipment} className=\"retry-button\">\r\n                Retry\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"equipment-list-section\">\r\n      <div className=\"toolbar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by manufacturer or model...\"\r\n          value={searchTerm}\r\n          onChange={(e) => {\r\n            setSearchTerm(e.target.value);\r\n            setCurrentPage(1);\r\n          }}\r\n          className=\"equipment-search-input\"\r\n          aria-label=\"Search equipment\"\r\n        />\r\n        <button onClick={() => setIsScannerOpen(true)} className=\"scan-button\">Scan Equipment QR</button>\r\n      </div>\r\n      <div className=\"equipment-card-grid\">\r\n        {currentItems.length === 0 ? (\r\n          <div style={{ gridColumn: '1/-1', textAlign: 'center', color: '#888' }}>\r\n            {filteredEquipment.length === 0 && equipment.length > 0 \r\n              ? 'No equipment matches your search criteria.'\r\n              : 'No equipment found.'\r\n            }\r\n          </div>\r\n        ) : (\r\n          currentItems.map((item) => (\r\n            <EquipmentCard\r\n              key={item.id}\r\n              equipment={item}\r\n              onEdit={setEditingEquipment}\r\n              onDelete={handleDelete}\r\n              onViewInspections={onViewInspections}\r\n              onInspect={setInspectingEquipment}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n      <div className=\"pagination\">\r\n        {Array.from({ length: Math.ceil(filteredEquipment.length / itemsPerPage) }, (_, i) => (\r\n          <button\r\n            key={i + 1}\r\n            onClick={() => paginate(i + 1)}\r\n            className={currentPage === i + 1 ? 'active' : ''}\r\n            aria-current={currentPage === i + 1 ? 'page' : undefined}\r\n          >\r\n            {i + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {isScannerOpen && <QrScanner onScan={handleScan} onClose={() => setIsScannerOpen(false)} />}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default EquipmentList;\r\n","import React, { useState } from 'react';\r\nimport { QrReader } from 'react-qr-reader';\r\nimport Modal from './Modal';\r\n\r\nconst QrScanner = ({ onScan, onClose }) => {\r\n  const [data, setData] = useState('No result');\r\n\r\n  const handleScan = (result, error) => {\r\n    if (!!result) {\r\n      setData(result?.text);\r\n      onScan(result?.text);\r\n      onClose();\r\n    }\r\n\r\n    if (!!error) {\r\n      console.info(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal onClose={onClose}>\r\n      <div className=\"qr-scanner-container\">\r\n        <QrReader\r\n          onResult={handleScan}\r\n          constraints={{ facingMode: 'environment' }}\r\n          style={{ width: '100%' }}\r\n        />\r\n        <p>{data}</p>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default QrScanner;"],"names":["_ref","equipmentId","documents","setDocuments","useState","useEffect","window","api","getByEquipmentId","then","result","isError","console","error","getErrorMessage","data","_jsxs","children","_jsx","map","doc","onClick","async","openFilePath","filePath","alert","handleOpenDocument","file_path","className","file_name","id","equipment","onEdit","onDelete","onViewInspections","onInspect","equipment_id","type","manufacturer","model","serial_number","status","toLowerCase","replace","DocumentList","generateEquipmentPdf","confirm","showToast","setEquipment","currentPage","setCurrentPage","itemsPerPage","isScannerOpen","setIsScannerOpen","loading","setLoading","setError","fetchEquipment","equipmentData","secure","getAll","Array","isArray","Error","message","refresh","useEquipmentStore","state","searchTerm","setSearchTerm","setEditingEquipment","setInspectingEquipment","handleDelete","delete","indexOfLastItem","indexOfFirstItem","filteredEquipment","filter","item","includes","currentItems","slice","placeholder","value","onChange","e","target","disabled","style","gridColumn","textAlign","padding","length","color","EquipmentCard","from","Math","ceil","_","i","undefined","QrScanner","onScan","scannedData","onClose","setData","Modal","QrReader","onResult","handleScan","text","info","constraints","facingMode","width"],"sourceRoot":""}