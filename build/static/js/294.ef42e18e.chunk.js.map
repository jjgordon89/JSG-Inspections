{"version":3,"file":"static/js/294.ef42e18e.chunk.js","mappings":"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","sources":["components/ReportGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  generateHistoryReport, \r\n  generateEquipmentPdf, \r\n  generateInspectionPdf,\r\n  generateWorkOrderPdf,\r\n  generateDeficiencyPdf,\r\n  generateCompliancePdf,\r\n  generateLoadTestCertificate,\r\n  generateCalibrationCertificate\r\n} from '../utils/generatePdf';\r\nimport './ReportGenerator.css';\r\n\r\nfunction ReportGenerator() {\r\n  const [equipment, setEquipment] = useState([]);\r\n  const [inspections, setInspections] = useState([]);\r\n  const [workOrders, setWorkOrders] = useState([]);\r\n  const [deficiencies, setDeficiencies] = useState([]);\r\n  const [loadTests, setLoadTests] = useState([]);\r\n  const [calibrations, setCalibrations] = useState([]);\r\n  \r\n  const [selectedEquipment, setSelectedEquipment] = useState('');\r\n  const [selectedInspection, setSelectedInspection] = useState('');\r\n  const [selectedWorkOrder, setSelectedWorkOrder] = useState('');\r\n  const [selectedDeficiency, setSelectedDeficiency] = useState('');\r\n  const [selectedLoadTest, setSelectedLoadTest] = useState('');\r\n  const [selectedCalibration, setSelectedCalibration] = useState('');\r\n  \r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [reportType, setReportType] = useState('history');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Fetch all data using secure operations\r\n      const [\r\n        equipmentList,\r\n        inspectionsList,\r\n        workOrdersList,\r\n        deficienciesList,\r\n        loadTestsList,\r\n        calibrationsList\r\n      ] = await Promise.all([\r\n        window.api.secureOperation('equipment.getAll', {}),\r\n        window.api.secureOperation('inspections.getAll', {}),\r\n        window.api.secureOperation('workOrders.getAll', {}),\r\n        window.api.secureOperation('deficiencies.getAll', {}),\r\n        window.api.secureOperation('loadTests.getByEquipmentId', { equipmentId: selectedEquipment || 1 }).catch(() => []),\r\n        window.api.secureOperation('calibrations.getByEquipmentId', { equipmentId: selectedEquipment || 1 }).catch(() => [])\r\n      ]);\r\n\r\n      setEquipment(equipmentList || []);\r\n      setInspections(inspectionsList || []);\r\n      setWorkOrders(workOrdersList || []);\r\n      setDeficiencies(deficienciesList || []);\r\n      setLoadTests(loadTestsList || []);\r\n      setCalibrations(calibrationsList || []);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      alert('Error loading data for reports. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEquipmentChange = async (equipmentId) => {\r\n    setSelectedEquipment(equipmentId);\r\n    \r\n    if (equipmentId) {\r\n      try {\r\n        // Fetch equipment-specific data\r\n        const [loadTestsList, calibrationsList] = await Promise.all([\r\n          window.api.secureOperation('loadTests.getByEquipmentId', { equipmentId: parseInt(equipmentId) }).catch(() => []),\r\n          window.api.secureOperation('calibrations.getByEquipmentId', { equipmentId: parseInt(equipmentId) }).catch(() => [])\r\n        ]);\r\n        \r\n        setLoadTests(loadTestsList || []);\r\n        setCalibrations(calibrationsList || []);\r\n      } catch (error) {\r\n        console.error('Error fetching equipment-specific data:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleGenerateHistoryReport = async () => {\r\n    if (!selectedEquipment) {\r\n      alert('Please select a piece of equipment.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const equipmentDetails = await window.api.secureOperation('equipment.getById', { \r\n        id: parseInt(selectedEquipment) \r\n      });\r\n\r\n      let inspectionHistory;\r\n      if (startDate && endDate) {\r\n        inspectionHistory = await window.api.secureOperation('inspections.getByDateRange', { \r\n          startDate, \r\n          endDate \r\n        });\r\n        // Filter by equipment ID since getByDateRange returns all equipment\r\n        inspectionHistory = inspectionHistory.filter(inspection => inspection.equipment_id === parseInt(selectedEquipment));\r\n      } else {\r\n        inspectionHistory = await window.api.secureOperation('inspections.getByEquipmentId', { \r\n          equipmentId: parseInt(selectedEquipment) \r\n        });\r\n      }\r\n\r\n      if (inspectionHistory.length === 0) {\r\n        alert('No inspections found for the selected criteria.');\r\n        return;\r\n      }\r\n\r\n      await generateHistoryReport(equipmentDetails, inspectionHistory);\r\n    } catch (error) {\r\n      console.error('Error generating history report:', error);\r\n      alert('Error generating history report. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateEquipmentReport = async () => {\r\n    if (!selectedEquipment) {\r\n      alert('Please select a piece of equipment.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const equipmentDetails = await window.api.secureOperation('equipment.getById', { \r\n        id: parseInt(selectedEquipment) \r\n      });\r\n\r\n      generateEquipmentPdf(equipmentDetails);\r\n    } catch (error) {\r\n      console.error('Error generating equipment report:', error);\r\n      alert('Error generating equipment report. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateInspectionReport = async () => {\r\n    if (!selectedInspection) {\r\n      alert('Please select an inspection.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const inspection = inspections.find(i => i.id === parseInt(selectedInspection));\r\n      if (!inspection) {\r\n        alert('Selected inspection not found.');\r\n        return;\r\n      }\r\n\r\n      await generateInspectionPdf(inspection);\r\n    } catch (error) {\r\n      console.error('Error generating inspection report:', error);\r\n      alert('Error generating inspection report. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateWorkOrderReport = async () => {\r\n    if (!selectedWorkOrder) {\r\n      alert('Please select a work order.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const workOrder = workOrders.find(wo => wo.id === parseInt(selectedWorkOrder));\r\n      if (!workOrder) {\r\n        alert('Selected work order not found.');\r\n        return;\r\n      }\r\n\r\n      await generateWorkOrderPdf(workOrder);\r\n    } catch (error) {\r\n      console.error('Error generating work order report:', error);\r\n      alert('Error generating work order report. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateDeficiencyReport = async () => {\r\n    if (!selectedDeficiency) {\r\n      alert('Please select a deficiency.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const deficiency = deficiencies.find(d => d.id === parseInt(selectedDeficiency));\r\n      if (!deficiency) {\r\n        alert('Selected deficiency not found.');\r\n        return;\r\n      }\r\n\r\n      await generateDeficiencyPdf(deficiency);\r\n    } catch (error) {\r\n      console.error('Error generating deficiency report:', error);\r\n      alert('Error generating deficiency report. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateComplianceReport = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      await generateCompliancePdf(equipment);\r\n    } catch (error) {\r\n      console.error('Error generating compliance report:', error);\r\n      alert('Error generating compliance report. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateLoadTestCertificate = async () => {\r\n    if (!selectedLoadTest) {\r\n      alert('Please select a load test.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const loadTest = loadTests.find(lt => lt.id === parseInt(selectedLoadTest));\r\n      if (!loadTest) {\r\n        alert('Selected load test not found.');\r\n        return;\r\n      }\r\n\r\n      const equipmentDetails = await window.api.secureOperation('equipment.getById', { \r\n        id: loadTest.equipment_id \r\n      });\r\n\r\n      generateLoadTestCertificate(loadTest, equipmentDetails);\r\n    } catch (error) {\r\n      console.error('Error generating load test certificate:', error);\r\n      alert('Error generating load test certificate. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateCalibrationCertificate = async () => {\r\n    if (!selectedCalibration) {\r\n      alert('Please select a calibration.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const calibration = calibrations.find(c => c.id === parseInt(selectedCalibration));\r\n      if (!calibration) {\r\n        alert('Selected calibration not found.');\r\n        return;\r\n      }\r\n\r\n      const equipmentDetails = await window.api.secureOperation('equipment.getById', { \r\n        id: calibration.equipment_id \r\n      });\r\n\r\n      generateCalibrationCertificate(calibration, equipmentDetails);\r\n    } catch (error) {\r\n      console.error('Error generating calibration certificate:', error);\r\n      alert('Error generating calibration certificate. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderReportOptions = () => {\r\n    switch (reportType) {\r\n      case 'history':\r\n        return (\r\n          <div className=\"report-section\">\r\n            <h3>Inspection History Report</h3>\r\n            <div className=\"form-group\">\r\n              <label>Equipment:</label>\r\n              <select\r\n                value={selectedEquipment}\r\n                onChange={(e) => handleEquipmentChange(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select Equipment</option>\r\n                {equipment.map((item) => (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.equipment_id} - {item.type}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Start Date (optional):</label>\r\n              <input \r\n                type=\"date\" \r\n                value={startDate} \r\n                onChange={(e) => setStartDate(e.target.value)} \r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>End Date (optional):</label>\r\n              <input \r\n                type=\"date\" \r\n                value={endDate} \r\n                onChange={(e) => setEndDate(e.target.value)} \r\n              />\r\n            </div>\r\n            <button \r\n              onClick={handleGenerateHistoryReport}\r\n              disabled={loading || !selectedEquipment}\r\n            >\r\n              {loading ? 'Generating...' : 'Generate History Report'}\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      case 'equipment':\r\n        return (\r\n          <div className=\"report-section\">\r\n            <h3>Equipment Report</h3>\r\n            <div className=\"form-group\">\r\n              <label>Equipment:</label>\r\n              <select\r\n                value={selectedEquipment}\r\n                onChange={(e) => setSelectedEquipment(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select Equipment</option>\r\n                {equipment.map((item) => (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.equipment_id} - {item.type}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <button \r\n              onClick={handleGenerateEquipmentReport}\r\n              disabled={loading || !selectedEquipment}\r\n            >\r\n              {loading ? 'Generating...' : 'Generate Equipment Report'}\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      case 'inspection':\r\n        return (\r\n          <div className=\"report-section\">\r\n            <h3>Inspection Report</h3>\r\n            <div className=\"form-group\">\r\n              <label>Inspection:</label>\r\n              <select\r\n                value={selectedInspection}\r\n                onChange={(e) => setSelectedInspection(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select Inspection</option>\r\n                {inspections.map((inspection) => (\r\n                  <option key={inspection.id} value={inspection.id}>\r\n                    {inspection.inspection_date} - {inspection.inspector} - Equipment {inspection.equipment_id}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <button \r\n              onClick={handleGenerateInspectionReport}\r\n              disabled={loading || !selectedInspection}\r\n            >\r\n              {loading ? 'Generating...' : 'Generate Inspection Report'}\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      case 'workorder':\r\n        return (\r\n          <div className=\"report-section\">\r\n            <h3>Work Order Report</h3>\r\n            <div className=\"form-group\">\r\n              <label>Work Order:</label>\r\n              <select\r\n                value={selectedWorkOrder}\r\n                onChange={(e) => setSelectedWorkOrder(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select Work Order</option>\r\n                {workOrders.map((wo) => (\r\n                  <option key={wo.id} value={wo.id}>\r\n                    {wo.wo_number} - {wo.title}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <button \r\n              onClick={handleGenerateWorkOrderReport}\r\n              disabled={loading || !selectedWorkOrder}\r\n            >\r\n              {loading ? 'Generating...' : 'Generate Work Order Report'}\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      case 'deficiency':\r\n        return (\r\n          <div className=\"report-section\">\r\n            <h3>Deficiency Report</h3>\r\n            <div className=\"form-group\">\r\n              <label>Deficiency:</label>\r\n              <select\r\n                value={selectedDeficiency}\r\n                onChange={(e) => setSelectedDeficiency(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select Deficiency</option>\r\n                {deficiencies.map((deficiency) => (\r\n                  <option key={deficiency.id} value={deficiency.id}>\r\n                    {deficiency.equipment_identifier} - {deficiency.severity} - {deficiency.description.substring(0, 50)}...\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <button \r\n              onClick={handleGenerateDeficiencyReport}\r\n              disabled={loading || !selectedDeficiency}\r\n            >\r\n              {loading ? 'Generating...' : 'Generate Deficiency Report'}\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      case 'compliance':\r\n        return (\r\n          <div className=\"report-section\">\r\n            <h3>Compliance Summary Report</h3>\r\n            <p>This report provides a comprehensive overview of equipment compliance status across all equipment.</p>\r\n            <button \r\n              onClick={handleGenerateComplianceReport}\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Generating...' : 'Generate Compliance Report'}\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      case 'loadtest':\r\n        return (\r\n          <div className=\"report-section\">\r\n            <h3>Load Test Certificate</h3>\r\n            <div className=\"form-group\">\r\n              <label>Equipment:</label>\r\n              <select\r\n                value={selectedEquipment}\r\n                onChange={(e) => handleEquipmentChange(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select Equipment</option>\r\n                {equipment.map((item) => (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.equipment_id} - {item.type}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            {selectedEquipment && (\r\n              <div className=\"form-group\">\r\n                <label>Load Test:</label>\r\n                <select\r\n                  value={selectedLoadTest}\r\n                  onChange={(e) => setSelectedLoadTest(e.target.value)}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Load Test</option>\r\n                  {loadTests.map((test) => (\r\n                    <option key={test.id} value={test.id}>\r\n                      {test.test_date} - {test.test_type} - {test.test_results}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            )}\r\n            <button \r\n              onClick={handleGenerateLoadTestCertificate}\r\n              disabled={loading || !selectedLoadTest}\r\n            >\r\n              {loading ? 'Generating...' : 'Generate Load Test Certificate'}\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      case 'calibration':\r\n        return (\r\n          <div className=\"report-section\">\r\n            <h3>Calibration Certificate</h3>\r\n            <div className=\"form-group\">\r\n              <label>Equipment:</label>\r\n              <select\r\n                value={selectedEquipment}\r\n                onChange={(e) => handleEquipmentChange(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select Equipment</option>\r\n                {equipment.map((item) => (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.equipment_id} - {item.type}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            {selectedEquipment && (\r\n              <div className=\"form-group\">\r\n                <label>Calibration:</label>\r\n                <select\r\n                  value={selectedCalibration}\r\n                  onChange={(e) => setSelectedCalibration(e.target.value)}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Calibration</option>\r\n                  {calibrations.map((cal) => (\r\n                    <option key={cal.id} value={cal.id}>\r\n                      {cal.calibration_date} - {cal.instrument_type} - {cal.calibration_results}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            )}\r\n            <button \r\n              onClick={handleGenerateCalibrationCertificate}\r\n              disabled={loading || !selectedCalibration}\r\n            >\r\n              {loading ? 'Generating...' : 'Generate Calibration Certificate'}\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  if (loading && !reportType) {\r\n    return (\r\n      <div className=\"report-generator\">\r\n        <div className=\"loading\">Loading report data...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"report-generator\">\r\n      <h2>Report Generator</h2>\r\n      \r\n      <div className=\"report-type-selector\">\r\n        <label>Report Type:</label>\r\n        <select\r\n          value={reportType}\r\n          onChange={(e) => setReportType(e.target.value)}\r\n        >\r\n          <option value=\"history\">Inspection History</option>\r\n          <option value=\"equipment\">Equipment Details</option>\r\n          <option value=\"inspection\">Individual Inspection</option>\r\n          <option value=\"workorder\">Work Order</option>\r\n          <option value=\"deficiency\">Deficiency</option>\r\n          <option value=\"compliance\">Compliance Summary</option>\r\n          <option value=\"loadtest\">Load Test Certificate</option>\r\n          <option value=\"calibration\">Calibration Certificate</option>\r\n        </select>\r\n      </div>\r\n\r\n      {renderReportOptions()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportGenerator;\r\n"],"names":["equipment","setEquipment","useState","inspections","setInspections","workOrders","setWorkOrders","deficiencies","setDeficiencies","loadTests","setLoadTests","calibrations","setCalibrations","selectedEquipment","setSelectedEquipment","selectedInspection","setSelectedInspection","selectedWorkOrder","setSelectedWorkOrder","selectedDeficiency","setSelectedDeficiency","selectedLoadTest","setSelectedLoadTest","selectedCalibration","setSelectedCalibration","startDate","setStartDate","endDate","setEndDate","reportType","setReportType","loading","setLoading","useEffect","fetchData","async","equipmentList","inspectionsList","workOrdersList","deficienciesList","loadTestsList","calibrationsList","Promise","all","window","api","secureOperation","equipmentId","catch","error","console","alert","handleEquipmentChange","parseInt","handleGenerateHistoryReport","equipmentDetails","id","inspectionHistory","filter","inspection","equipment_id","length","generateHistoryReport","handleGenerateEquipmentReport","generateEquipmentPdf","handleGenerateInspectionReport","find","i","generateInspectionPdf","handleGenerateWorkOrderReport","workOrder","wo","generateWorkOrderPdf","handleGenerateDeficiencyReport","deficiency","d","generateDeficiencyPdf","handleGenerateComplianceReport","generateCompliancePdf","handleGenerateLoadTestCertificate","loadTest","lt","generateLoadTestCertificate","handleGenerateCalibrationCertificate","calibration","c","generateCalibrationCertificate","_jsx","className","children","_jsxs","value","onChange","e","target","renderReportOptions","required","map","item","type","onClick","disabled","inspection_date","inspector","wo_number","title","equipment_identifier","severity","description","substring","test","test_date","test_type","test_results","cal","calibration_date","instrument_type","calibration_results"],"sourceRoot":""}